/*
MEDIA ITEM
/details
*/

:root {
	--s-banner: 17rem;
	--s-card: clamp(200px, 24vw, 500px);
	--s-card-pad: var(--s-page-pad);
	--s-card-allowance: calc(var(--s-card) + var(--s-card-pad) * 2);
	--s-content-max: calc(var(--s-sidebar-allowance) + var(--s-card-allowance));
}
/* enabled banner */
@supports selector(:has(*)) {
	.layout-desktop:has(.withBackdrop) {
		--s-banner: max(calc(65px + 25rem + 10vh), 50vh);
	}
}
@supports not selector(:has(*)) {
	.layout-desktop .withBackdrop ~ * {
		--s-banner: max(calc(65px + 25rem + 10vh), 50vh);
	}
}
/* mobile banner */
.layout-mobile {
	--s-banner: max(200px, 25vh);
}

.detailPageWrapperContainer {
	position: relative;
	top: 0 !important;
	background: var(--c-background);
}
.layout-desktop .detailPageWrapperContainer::before {
	content: "";
	position: absolute;
	inset: auto 0 100%;
	height: calc(var(--s-banner) * 0.3);
	background: linear-gradient(0deg, var(--c-foreground-stark), transparent);
	opacity: .6;
}

.detailPagePrimaryContent {
	padding-right: var(--s-page-pad);
	/* give details a maximum width for readability */
	max-width: 90ch;
}

@supports selector(:has(*)) {
	html:has(#itemDetailPage:not(.hide)) .backgroundContainer.withBackdrop {
		clip-path: inset(0 calc(100% - var(--s-sidebar-allowance)) 0 0)
	}

	html:has(#itemDetailPage:not(.hide)):has(.withBackdrop) .detailPageWrapperContainer {
		background: hsla(var(--hsl-background), var(--o-background));
	}
}
@supports not selector(:has(*)) {
	.withBackdrop ~ * .detailPageWrapperContainer {
		background: hsla(var(--hsl-background), var(--o-background));
	}
}
.withBackdrop ~ * .detailPageWrapperContainer {
		background: hsla(var(--hsl-background), var(--o-background));
		backdrop-filter: blur(10px)
	}

/* BACKGROUND IMAGE */

.itemBackdrop {
	position: static;
	top: 0;
	width: 100%;
	height: var(--s-banner) !important; /* uses !important to override media queries */
	background-attachment: scroll;
	background-position: center 20%;
}

html:has(#itemDetailPage:not(.hide)) .backdropImage {
	filter: none;
}

.layout-desktop .itemBackdrop::after {
	content: none;
}

/* HEADER */

.mediaInfoOfficialRating {
	border-radius: var(--r-small);
}

/* DETAILS */

/* Re-arrange details */

.itemDetailsGroup,
.detailSectionContent {
	display: contents;
}

.detailSection {
	display: flex;
	flex-direction: column;
	margin-bottom: 2rem;
}

.itemGenres:empty {
	display: none;
}

.tagline ~ .overview {
	margin-top: 0;
}

.itemExternalLinks {
	order: 99;
}


.layout-desktop .detailPagePrimaryContainer,
.layout-desktop .detailPageContent {
	padding-left: var(--s-card-allowance) !important;
}

.layout-desktop .detailPagePrimaryContainer {
	position: static;
}

.layout-desktop .detailImageContainer {
	position: absolute;
	top: -9rem;
	left: var(--s-card-pad);
	bottom: 0;
	padding: 0;
	pointer-events: none;
}

.layout-desktop .detailImageContainer .card {
	position: sticky !important;
	top: 10rem;
	left: 0 !important;
	width: var(--s-card);
	max-width: initial;
	transform: none;
	pointer-events: auto;
}

/* disable interaction on certain card types that just give errors */
.detailImageContainer .card[data-type="Person"] {
	pointer-events: none;
}

/* HEADER */

.detailRibbon.detailRibbon {
	background: var(--c-foreground-stark);
	margin-top: 0 !important;
	height: auto;
	min-height: 7.2em;
}

.detailRibbon .nameContainer {
	padding: 1.2em 0;
}

.detailRibbon .nameContainer a {
	text-align: left;
}

.layout-desktop .detailLogo {
	display: block !important; /* override default media queries */
	z-index: 1;
	left: var(--s-card-allowance);
	width: calc(100% - var(--s-card-allowance) - var(--s-page-pad) - 2rem);
	top: calc(var(--s-banner) - 9rem);
	height: 7rem;
	background-position-x: 33%;
}

/* HEADER BUTTONS */

@media (max-aspect-ratio: 1/1) {
	.detailRibbon .mainDetailButtons {
		flex-direction: column;
		align-items: flex-start;
	}

	.detailButton::after {
		position: static !important;
		transform: none !important;
	}
}

/* button text */
.detailButton {
	flex-flow: row;
	gap: .6rem;
}
.detailButton::after {
	content: var(--txt, none);
	position: absolute;
	top: calc(100% - .6rem);
	left: 50%;
	text-transform: uppercase;
	transform: translateX(-50%) scale(0);
	transform-origin: center top;
	transition: transform .2s ease;
}
.detailButton:hover::after {
	transform: translateX(-50%) scale(1);
}
.btnPlay::after {
	position: static !important;
	transform: none !important;
}
.btnPlay {
	--txt: "Play";
}
.btnPlayTrailer {
	--txt: "Trailer";
}
.btnDownload {
	--txt: "Download";
}
.btnShuffle {
	--txt: "Shuffle";
}
.btnPlaystate {
	--txt: "Done";
}
.btnUserRating {
	--txt: "Love";
}
.btnMoreCommands {
	--txt: "More";
}

/* TAGS */

/* styles tags the same as genres/writers using some hacky overflow and ::before tricks */
.itemTags {
	margin: 0 0 .6em 6.85em !important;
	font-size: 100% !important;
	text-indent: -4.5ch; /* VERY INNACURATELY hides the "Tags: " text from the start. */
	overflow: hidden;
}
.itemTags > * {
	text-indent: 0;
}
.layout-mobile .itemTags {
	margin-left: 5.1em !important;
}

.itemTags::before {
	content: "Tags";
	position: absolute;
	left: 0;
	width: 6.25em;
	text-indent: 0;
}

/* EXTERNAL LINKS */

.itemExternalLinks {
	display: flex;
	gap: .3rem;
	font-size: 0 !important;
	flex-wrap: wrap;
}

.itemExternalLinks a {
	padding: .3rem .6rem;
	background: hsla(var(--hsl-foreground), var(--o-medium));
	border-radius: .3rem;
	font-size: 1.4rem;
	line-height: 1.3;
}
.itemExternalLinks a:hover {
	background: hsla(var(--hsl-foreground), var(--o-medium));
	text-decoration: none;
	color: var(--c-accent);
}

.itemExternalLinks a::before {
	width: 1em;
	height: 1em;
	border-radius: .2rem;
	margin-right: .6rem;
	background-size: contain;
}
.itemExternalLinks a[href^="https://anilist.co"]::before {
	content: "";
	background-image: url(https://anilist.co/img/icons/favicon-32x32.png);
}
.itemExternalLinks a[href^="https://www.imdb.com"]::before {
	content: "";
	background-image: url(https://m.media-amazon.com/images/G/01/imdb/images-ANDW73HA/favicon_desktop_32x32._CB1582158068_.png);
}
.itemExternalLinks a[href^="https://www.themoviedb.org"]::before {
	content: "";
	background-image: url(https://www.themoviedb.org/assets/2/favicon-32x32-543a21832c8931d3494a68881f6afcafc58e96c5d324345377f3197a37b367b5.png);
}
.itemExternalLinks a[href^="https://trakt.tv"]::before {
	content: "";
	background-image: url(https://walter.trakt.tv/hotlink-ok/public/apple-touch-icon.png);
}
.itemExternalLinks a[href^="http://www.tvmaze.com"]::before {
	content: "";
	background-image: url(https://static.tvmaze.com/images/favico/favicon-32x32.png);
}
.itemExternalLinks a[href^="https://www.thetvdb.com"]::before {
	content: "";
	background-image: url(https://www.thetvdb.com/images/icon.png);
}

.itemExternalLinks a[href*="themoviedb.org/collection"]::after {
	content: " Collection";
	white-space: pre;
}


/* CAST & CREW */

/* move cast to bottom of page, below special features */
#childrenCollapsible:has([data-type="Episode"]) ~ #castCollapsible {
	order: 99;
}

/* Stylized and smaller cast/crew info as per https://jellyfin.org/docs/general/clients/css-customization.html */

/* Shrink and square (or round) cast thumnails */
#castContent .card.overflowPortraitCard.personCard.card-hoverable.card-withuserdata {width: 4.2cm !important; font-size: 90% !important;}
#castContent .card.overflowPortraitCard.personCard.card-withuserdata {width: 4.2cm !important; font-size: 90% !important;}

/* Correct image aspect ratio behaviour, set border-radius to zero for square tiles */
#castContent .cardContent-button.cardImageContainer.coveredImage.cardContent.cardContent-shadow.itemAction.lazy {background-size: cover; !important; border-radius: 2.5cm;}
#castContent .cardContent-button.cardImageContainer.coveredImage.defaultCardBackground.defaultCardBackground1.cardContent.cardContent-shadow.itemAction {background-size: cover; !important; border-radius: 2.5cm;}
#castContent .cardContent-button.cardImageContainer.coveredImage.defaultCardBackground.defaultCardBackground2.cardContent.cardContent-shadow.itemAction {background-size: cover; !important; border-radius: 2.5cm;}
#castContent .cardContent-button.cardImageContainer.coveredImage.defaultCardBackground.defaultCardBackground3.cardContent.cardContent-shadow.itemAction {background-size: cover; !important; border-radius: 2.5cm;}
#castContent .cardContent-button.cardImageContainer.coveredImage.defaultCardBackground.defaultCardBackground4.cardContent.cardContent-shadow.itemAction {background-size: cover; !important; border-radius: 2.5cm;}
#castContent .cardContent-button.cardImageContainer.coveredImage.defaultCardBackground.defaultCardBackground5.cardContent.cardContent-shadow.itemAction {background-size: cover; !important; border-radius: 2.5cm;}
#castContent .cardScalable {width: 3.8cm !important; height: 3.8cm !important; border-radius: 2.5cm;}
#castContent .cardOverlayContainer.itemAction,
#castContent .cardOverlayButton {
	border-radius: var(--r-round);
}

/* Center the mouseover buttons */
#castContent .cardOverlayButton-br {bottom: 4%; right: 15%; width: 70%;}
#castContent .cardOverlayButton.cardOverlayButton-hover.itemAction.paper-icon-button-light {margin:auto;}


/* MORE LIKE THIS - recommended/suggestions section - only affects mouse input because it would be hell on mobile */

@media (pointer: fine) {
	#similarCollapsible .card {
		pointer-events: auto; /* revert hitbox changes from base.css to prevent visual errors */
	}
	#similarCollapsible .card + .card {
		margin-left: -4em;
		transition: transform 0.1s ease-out;
	}
	#similarCollapsible .card:hover ~ .card {
		transform: translateX(3.5em);
	}
	
	#similarCollapsible .card + .card .cardScalable {
		box-shadow: -1.5rem 0 1rem -1rem #000b;
	}
	#similarCollapsible .card:not(:hover):not(:last-of-type) .cardText {
		mask-image: linear-gradient(to left, transparent 1vw, rgba(0,0,0,0.1) 3vw, black 7vw);
	}
	
	#similarCollapsible#similarCollapsible .cardOverlayButton-br {
		right: .3rem !important;
		left: auto;
	}
	#similarCollapsible#similarCollapsible .card:not(:hover) .cardOverlayButton-br {
		transform: translateX(calc(100% + var(--s-card-margin)));
	}
	
	#similarCollapsible .cardIndicators {
		right: auto;
		left: .3rem;
	}
}
@media not (pointer: fine) {
	#similarCollapsible .itemsContainer {
		display: grid;
		grid-template-columns: repeat(3, 31.2vw);
	}
}

/* SEASON PAGES */


/* Episode pages & "more from" section on library pages */

@supports selector(:has(*)) {	
	.layout-desktop #itemDetailPage #childrenCollapsible:has(.itemsContainer [data-type="Episode"])::before {
		content: "Episodes";
		display: block;
		padding-bottom: .2em;
		padding-top: .5em;	
		font-size: 1.5em;
		font-weight: 900;
	}
}

.layout-desktop  #childrenCollapsible.verticalSection-extrabottompadding .itemsContainer {
	flex-flow: row wrap;
	padding-right: 0;
}


.layout-desktop #itemDetailPage .listItem[data-type="Episode"] {
	padding: 0 1.5rem 1.5rem 0;
	background: none;
	position: relative;
	width: 30rem;
	flex-grow: 1;
	overflow: visible;
	contain: initial;
}

.layout-desktop #itemDetailPage .listItem[data-type="Episode"]:hover {
	color: var(--c-text);
}

.layout-desktop #itemDetailPage .listItem[data-type="Episode"]:not(:hover) .listItemImageButton {
	opacity: 0;
}


.layout-desktop #itemDetailPage .listItem[data-type="Episode"] .listItemImage {
	cursor: pointer;
	aspect-ratio: 16/9;
}

.layout-desktop #itemDetailPage .listItem[data-type="Episode"] .listItem-content {
	flex-flow: column nowrap;
}

.layout-desktop #itemDetailPage .listItem[data-type="Episode"] .listItemImage {
	width: 100%;
	height: calc(30rem * 9/16);
	border-radius: var(--r-large);
	margin: 0;
	overflow: hidden;
}
@supports (aspect-ratio: 16/9) {
	.layout-desktop #itemDetailPage .listItem[data-type="Episode"] .listItemImage {
		height: auto;
		aspect-ratio: 16/9;
	}
}

.layout-desktop  .listItemBody {
	width: 100%;
}

.layout-desktop  #childrenCollapsible.verticalSection-extrabottompadding .listItemImage::before {
	content: "";
	position: absolute;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	background: rgba(0,0,0,0.7);
	opacity: 0;
	transition: opacity .2s ease;
}
.layout-desktop  #childrenCollapsible.verticalSection-extrabottompadding .listItem:hover .listItemImage::before {
	opacity: 1;
}

.layout-desktop  #childrenCollapsible.verticalSection-extrabottompadding .listItemBody {
	padding: .25em .5em .85em;
	order: 1;
	overflow: visible;
	contain: initial;
}
	
/* descriptions */

.layout-desktop  .listItem-overview {
	position: absolute;
	bottom: 100%;
	z-index: 5;
	background: var(--c-foreground);
	padding: .6em;
	border-radius: .6em;
	pointer-events: none;
	opacity: 0;
}
.layout-desktop  .listItem:hover .listItem-overview {
	opacity: 1;
}

/* PLAYLISTS */

.listItem[data-playlistitemid] {
	display: grid;
}

.listItem[data-playlistitemid] {
	display: grid;
	grid-template-columns: 0fr 1fr 100fr 1fr 1fr;
	grid-template-areas: "handle image title info buttons";
}

.listItem[data-playlistitemid] .listViewDragHandle {
	grid-area: handle;
}

.listItem[data-playlistitemid] .listItemImage {
	grid-area: image;
}

.listItem[data-playlistitemid] .listItemBody {
	grid-area: title;
}

.listItem[data-playlistitemid] .listViewUserDataButtons {
	grid-area: buttons;
}

/* media info */

.listItem[data-playlistitemid] .listItemMediaInfo {
	grid-area: info;
	display: grid;
	grid-template-columns: 9rem 7rem 4em 4em 2em;
	grid-template-areas: "date duration rating score cc";
	gap: .6rem;
}

.listItem[data-playlistitemid] .listItemMediaInfo {
	grid-area: info;
	display: grid;
	grid-template-columns: 7rem 9rem 4em 4em 2em;
	grid-template-areas: "date duration rating score cc";
	gap: .6rem;
}


.listItem[data-playlistitemid] .mediaInfoItem {
	margin: 0;
}

.listItem[data-playlistitemid] .mediaInfoOfficialRating {
	grid-area: rating;
	white-space: nowrap;
}

.listItem[data-playlistitemid] .starRatingContainer {
	grid-area: score;
}

.listItem[data-playlistitemid] .closedCaptionMediaInfoText {
	grid-area: cc;
}

/* swap date with duration because neither has a distinguishing class and it's more likely that the date will be missing
this should prevent some layout issues */
.listItem[data-playlistitemid] [class="mediaInfoItem"] + [class="mediaInfoItem"] {
	order: -1;
}

