/* recommended jellyfin rounded icons */

@import url("https://cdn.jsdelivr.net/gh/prayag17/Jellyfin-Icons/round.css");
@import url("https://fonts.googleapis.com/css2?family=Noto+Sans:ital,wght@0,100..900;1,100..900&display=swap");

/* material icons reference https://fonts.google.com/icons?selected=Material+Icons */


/* VARIABLES *\

Prefix meanings:
c-   colour
e-   ease functions
f-   font
g-   gradient
hsl- raw hsl value
i-   image
o-   opacity
r-   rounding
s-   size
t-   timings
*/

:root {
	--t-quick: 120ms;
	--t-average: 240ms;
	--t-slow: 360ms;
	
	--o-light: 40%;
	--o-medium: 65%;
	--o-heavy: 80%;
	--o-background: 91%;
	--o-darken: 70%;
	
	--hsl-background: 0, 0%, 3%;
	--hsl-active: 278, 45%, 57%;
	--hsl-accent: 70, 65%, 38%;
	--hsl-complementary: 310, 65%, 65%;
	--hsl-foreground-stark: 0, 0%, 0%;
	--hsl-foreground: 70, 30%, 9%;
	--hsl-foreground: 310, 30%, 15%;
	--hsl-border: 0, 0%, 3%;
	--hsl-text: 0, 0%, 84%;
	--hsl-darken: 0, 0%, 0%;
	--c-background: hsl(var(--hsl-background));
	--c-active: hsl(var(--hsl-active));
	--c-accent: hsl(var(--hsl-accent));
	--c-complementary: hsl(var(--hsl-complementary));
	--c-foreground-stark: hsl(var(--hsl-foreground-stark));
	--c-foreground: hsl(var(--hsl-foreground));
	--c-text: hsl(var(--hsl-text));
	--c-border: hsl(var(--hsl-border));
	--c-darken: hsl(var(--hsl-darken));
	--g-background: linear-gradient(-15deg, #0006, #1c1c1c66), radial-gradient(circle at 20% -30%, hsla(150deg, 70%, 50%, 10%), hsla(270deg, 70%, 50%, 15%));
	--g-page: 
		linear-gradient(-15deg, hsla(var(--hsl-background), var(--o-light)), hsla(var(--hsl-background), var(--o-heavy))),
		radial-gradient(circle at 34% -30%, hsla(var(--hsl-accent), var(--o-medium)), hsla(var(--hsl-complementary), var(--o-medium))),
		radial-gradient(circle at 90% 110%, hsla(var(--hsl-accent), var(--o-medium)), hsla(var(--hsl-complementary), var(--o-heavy)));
	
	--r-factor: 1;
	--r-small: calc(.3rem * var(--r-factor));
	--r-medium: calc(.6rem * var(--r-factor));
	--r-large: calc(1rem * var(--r-factor));
	--r-round: calc(9999px * var(--r-factor));
	
	--s-page-pad: calc(1vw + 3rem);
	--s-sidebar-allowance: 5rem;

	--f-default: Noto Sans,Noto Sans HK,Noto Sans JP,Noto Sans KR,Noto Sans SC,Noto Sans TC,sans-serif;
	--f-icon: 'Material Icons Round';
}
.layout-mobile {
	--s-page-pad: 3.3%;
}

html {
	font-size: 10px !important;
}

body {
	font-size: 1.5em;
}

.skinHeader, html {
	color: var(--c-text);
}


/* BASIC ELEMENTS */

.fab, .raised {
	background: var(--c-foreground-stark);
	color: var(--c-text);
}
.fab {
	background: var(--c-foreground);
}

/* Sizings */

.padded-left.padded-left {
	padding-left: max(env(safe-area-inset-left),var(--s-page-pad))
}
.padded-right.padded-right {
	padding-right: max(env(safe-area-inset-left),var(--s-page-pad))
}

/* Misc */

.collapseContent,
.visualCardBox {
	background: var(--c-foreground-stark);
}

/* Lists in Dialogs - maybe elsewhere? */

.paperList {
	background: none;
	border-radius: var(--r-large) !important;
	overflow: hidden;
}
.paperList .listItem {
	background: hsla(var(--hsl-foreground), var(--o-medium)) padding-box;
}
.paperList .listItem ~ .listItem {
	border-top: 2px solid transparent;
}

.listItemIcon[style*="background-color"] {
	background: var(--c-foreground-stark) !important;
}

/* Headers */

h2 {
	font-weight: 900;
}

/* Scrollers */

.emby-scroller {
	padding-left: max(env(safe-area-inset-left),var(--s-page-pad));
	padding-right: max(env(safe-area-inset-right),var(--s-page-pad));
}
.layout-mobile .itemDetailPage .emby-scroller {
	padding-left: 0;
	padding-right: 0;
}

/* Buttons */

.button-link {
	color: var(--c-accent);
}

.emby-button,
.paper-icon-button-light {
	transition-duration: var(--t-quick);
}

.emby-button,
.cardOverlayButton {
	border-radius: var(--r-medium);
}

.emby-tab-button:hover,
.button-flat:hover {
	color: var(--c-accent);
}

.button-submit {
	background: var(--c-accent);
}

/* Card Action Buttons */

.cardOverlayButton-br {
	right: .3rem;
	bottom: .3rem;
	gap: .3rem;
}

.cardOverlayButton {
	padding: 0;
}
.paper-icon-button-light:hover:not(:disabled) {
	color: var(--c-accent);
	background-color: hsla(var(--hsl-foreground-stark), var(--o-medium));
}

/* List Items */

.listItem-border {
	border-bottom: .1rem solid var(--c-border) !important;
}
.listItem-border:not(.listItem-border + .listItem-border) {
	border-top: .1rem solid var(--c-border) !important;
}

.layout-desktop .listItemBodyText {
	margin: 0;
}

.listItemIcon:not(.listItemIcon-transparent) {
	background-color: var(--c-accent);
}


/* INPUTS */

/* Checkboxes */

.emby-checkbox:checked + span + .checkboxOutline, .itemProgressBarForeground {
	background-color: var(--c-accent);
}

.emby-checkbox:checked + span + .checkboxOutline,
.emby-checkbox:focus:not(:checked) + span + .checkboxOutline {
	border-color: var(--c-accent);
}

/* Fields */

.inputLabelFocused,
.textareaLabelFocused {
	color: var(--c-accent);
}

.emby-input,
.emby-textarea {
	background: hsla(var(--hsl-foreground), var(--o-medium));
/* 	border: none; */
	border-color: var(--c-foreground);
}

.emby-input:focus,
.emby-textarea:focus {
	border-color: var(--c-accent);
}

/* Selects */

.selectLabelFocused {
	color: var(--c-text);
}

.emby-select-withcolor {
	background: hsla(var(--hsl-foreground), var(--o-medium));
/* 	border: none; */
	border-color: var(--c-foreground);
	padding-left: .8rem !important;
	border-radius: var(--r-small);
}

.emby-select-withcolor > option {
	background: inherit;
}

/* Slider */

/* Create a new handle for slider */

/* .mdl-slider {
	opacity: 0;
}

.mdl-slider-background-flex {
	overflow: visible;
}

.mdl-slider-background-lower::after {
	content: "";
	position: absolute;
	top: calc(50% - 1rem);
	right: -1rem;
	width: 2rem;
	height: 2rem;
	border-radius: var(--r-round);
	background: var(--c-accent);
} */

.mdl-slider::-webkit-slider-thumb {
	background-color: var(--c-accent) !important;
}
.mdl-slider::-moz-range-thumb {
	background-color: var(--c-accent) !important;
}
.mdl-slider::-ms-thumb {
	background-color: var(--c-accent) !important;
}


/* BACKGROUND */

.backgroundContainer.withBackdrop {
	background: hsla(var(--hsl-background), var(--o-background));
}

.backdropImage {
	filter: blur(10px);
}


/* DIALOGS */

.formDialogFooter:not(.formDialogFooter-clear),
.formDialogHeader:not(.formDialogHeader-clear) {
	background: var(--c-foreground-stark);
}

.dialog {
	border-radius: var(--r-medium);
	background: hsla(var(--hsl-foreground-stark), var(--o-heavy)) !important;
}

.actionSheet h2 {
	color: var(--c-accent);
	font-size: 1em;
	letter-spacing: .03em;
	text-transform: uppercase;
}

.actionsheetDivider {
	margin: 0;
	height: .3rem;
	background: var(--c-border);
	height: 0;
	border-bottom: .3rem dotted var(--c-border) !important;
}

.listItem:hover {
	background-color: hsla(var(--hsl-foreground), var(--o-medium));
	color: var(--c-accent);
}

/* Overlays */
.dialogBackdrop {
	background: var(--g-page);
	transition-duration: var(--t-quick) !important;
}
.dialogBackdropOpened {
	opacity: var(--o-heavy);
}
.layout-desktop .dialog {
	animation-duration: 0.01s !important; /* cannot fully remove animation or closing dialogs breaks?..... */
}

/* Simple Dropdowns */

.actionSheet {
	border-radius: var(--r-medium) !important;;
}

.actionSheetContent {
	padding: 0 !important;
}





.backgroundContainer, .dialog, .nowPlayingPlaylist, .nowPlayingContextMenu, html, .preload {
	background: var(--c-background);
}


/* HEADER */

/* monochrome logo */
/* .pageTitleWithLogo {
	filter: grayscale(1) brightness(3);
} */
/* red logo */
.pageTitleWithDefaultLogo {
	background: var(--c-accent);
	-webkit-mask: url(./assets/img/banner-light.png) left center / contain no-repeat;
	mask: url(./assets/img/banner-light.png) left center / contain no-repeat;
}
html:not(:has(script[src^="file:///"])) .pageTitleWithDefaultLogo {
	-webkit-mask-image: url(./assets/img/banner-light.png);
	mask-image: url(./assets/img/banner-light.png);
}

.skinHeader,
.MuiAppBar-colorPrimary {
	/* give mobile header a transition */
	transition: background-color .5s ease-in-out, transform .2s ease-out;
}

.skinHeader-withBackground,
.MuiAppBar-positionFixed {
	background: hsla(var(--hsl-background), var(--o-heavy));
	backdrop-filter: blur(5px);
}





/* Modify header */

.skinHeader.semiTransparent {
	backdrop-filter: blur(3px) !important;
}



/* SIDEBAR */

.mainDrawerButton,
.headerHomeButton {
	display: none;
}

.navMenuOption.navMenuOption,
.navMenuOption-selected {
	padding: 1.2rem 1.5rem !important;
	margin: 0 1.5rem !important;
	border-radius: var(--r-medium) !important;
	color: var(--c-text);
}
.navMenuOption:hover {
	background: hsla(var(--hsl-foreground), var(--o-medium)) !important;
	color: var(--c-accent) !important;
}
@supports selector(:has(*)) {
	.navMenuOption-selected,
	html:has(#indexPage:not(.hide)) .navMenuOption[href$="/home.html"],
	html:has(.libraryPage:not(.hide) .card[data-type="BoxSet"]) .navMenuOption:has(.folder),
	html:has(.libraryPage:not(.hide) .card[data-type="Playlist"]) .navMenuOption:has(.view_list),
	html:has(#myPreferencesMenuPage:not(.hide)) .navMenuOption[data-itemid="settings"] {
		background: hsla(var(--hsl-foreground), var(--o-medium)) !important;
		color: var(--c-accent) !important;
	}
}
@supports not selector(:has(*)) {
	.navMenuOption-selected:not(:hover) {
		background: none !important;
		color: var(--c-text) !important;
	}
}

.navMenuOptionIcon.navMenuOptionIcon {
	width: 2rem;
	margin-right: 1.5rem;
}

.mainDrawer {
	background: hsla(var(--hsl-background), 80%);
	backdrop-filter: blur(5px);
}

.layout-desktop .mainDrawer:not(:hover) .navMenuOption {
	border-radius: 0 !important;
}

.layout-desktop .libraryDocument:not(.hide-scroll) .skinHeader,
.layout-desktop .libraryDocument:not(.hide-scroll) .page {
	left: var(--s-sidebar-allowance);
}

.layout-desktop .libraryDocument:not(.hide-scroll) .mainDrawer {
	left: 0 !important;
	width: 320px !important;
	background: hsla(var(--hsl-foreground-stark), var(--o-medium));
	color: rgba(255, 255, 255, 0.8);
	clip-path: inset(0 calc(100% - 6.5rem) 0 0);
	transform: translateX(-1.5rem) !important;
	transition: transform var(--t-quick) ease-out, clip-path var(--t-quick) ease-out !important;
}
.layout-desktop .libraryDocument:not(.hide-scroll) .mainDrawer:hover {
	transform: none !important;
	clip-path: inset(0 0rem 0 0);
}

.layout-desktop .libraryDocument:not(.hide-scroll) .sidebarHeader {
	margin: 2rem 0 1rem;
	padding: 0 1.5rem;
	color: var(--c-accent);
	font-weight: 900;
	opacity: 0;
	transition: opacity 0.12s ease-out;
}
.layout-desktop .libraryDocument:not(.hide-scroll) .mainDrawer:hover .sidebarHeader {
	opacity: 1;
}

/* move header texts up since they have more space */
.layout-desktop .headerTabs {
	width: auto;
	margin-top: -4.3em;
	align-self: center;
}

.layout-mobile .mainDrawer {
	position: fixed;
	inset: auto 0 0 !important;
	width: auto !important;
	height: 6rem;
	padding: 0 .6rem;
}
@supports selector(:has(*)) {
	.layout-mobile .mainDrawer {
		transform: translateY(6rem) !important;
		transition: transform .15s ease-out;
	}
	.layout-mobile:not(:has(.headroom--unpinned)) .mainDrawer {
		transform: translateY(0) !important;
	}
}

.layout-mobile .scrollContainer {
	display: flex;
	gap: .6rem;
	overflow: hidden;
}

.layout-mobile .libraryMenuOptions {
	display: flex;
	flex-flow: row nowrap;
	max-width: calc(100% - 7.8rem);
	height: 6rem;
	gap: .6rem;
	overflow-x: scroll;
	overflow-y: hidden;
}

.layout-mobile .mainDrawerHandle,
.layout-mobile .customMenuOptions:empty,
.layout-mobile .adminMenuOptions,
.layout-mobile .userMenuOptions,
.layout-mobile .sidebarHeader {
	display: none;
}

.layout-mobile .navMenuOption {
	width: 6rem;
	height: 6rem;
	flex: 0 0 auto;
	padding: 0 !important;
	flex-direction: column;
	justify-content: center;
	border-radius: 1rem !important;
}
.layout-mobile .navMenuOptionIcon {
	margin: 0;
}
.layout-mobile .navMenuOptionText {
	width: 100%;
	overflow: hidden;
	text-overflow: ellipsis;
	font-size: 1.2rem;
}

/* remove darkening after touching the sidebar on mobile */
.layout-mobile .tmla-mask {
	display: none;
}

/* Fix scrolling after touching the sidebar on mobile - required for always-open sidebar menu */
.layout-mobile .bodyWithPopupOpen:has(.drawer-open) {
	overflow-y: scroll !important;
}



/* Library browsing */

/* Better Filters */

.layout-desktop .dynamicFilterDialog {
	--width: clamp(20em, 80vw, 1200px);
	top: 5vh !important;
	left: calc(50% - var(--width)*.5) !important;
	width: var(--width);
	height: 85vh;
	margin: 0 !important;
}

.layout-desktop .filterDialogContent #expandButton {
	pointer-events: none;
}
.layout-desktop .filterDialogContent #expandButton .emby-collapse-expandIcon {
	display: none;
}

.layout-desktop .filterDialogContent .collapseContent {
	display: block !important;
	height: auto !important;
}

.layout-desktop .filterDialogContent .checkboxList {
	display: flex;
	flex-flow: row wrap;
	gap: 0 10px;
}
.layout-desktop .filterDialogContent .checkboxList .emby-checkbox-label {
	width: auto;
	height: auto;
	padding: 0;
	font-size: 1.4rem;
}
.layout-desktop .filterDialogContent .checkboxList .emby-checkbox-label .checkboxOutline {
	position: static;
	width: 1.35em;
	height: 1.35em;
	order: -1;
	margin-right: .5em;
}

/* blur cards on hover
.card:hover .cardImageContainer {
	filter: blur(1px);
}*/

/* increase darkening */
.cardOverlayContainer {
	background: hsla(var(--hsl-darken), var(--o-darken));
}



/* buttons */
.playstatebutton-icon-played {
	color: green;
}



/* CARDS */

.visualCardBox,
.cardScalable {
	border-radius: var(--r-large);
	overflow: hidden;
}

.visualCardBox .cardScalable {
	border-radius: var(--r-large) var(--r-large) 0 0;
}

/* Progress Bars */

.innerCardFooter {
	overflow: visible;
}

.itemProgressBar {
	position: absolute;
	left: .5rem;
	right: .5rem;
	bottom: .3rem;
	height: .4rem;
	background: #0008;
	border-radius: 99em;
	padding: .2rem;
	backdrop-filter: blur(1px);
}

.itemProgressBarForeground {
	position: static;
	height: 100%;
	border-radius: 99em;
	background: var(--c-accent);
}

/* Multiple media indicator */

/* TODO: move this to an option */
/* removing this indicator because I could actually not care less about it when browsing */
.mediaSourceIndicator {
	display: none;
}

/* Indicators */

.cardIndicators, .listItemIndicators {
	top: .3rem;
	right: .3rem;
}

.indicator {
	border: 0;
	border-radius: calc(var(--r-large) - .3rem) !important;
	background: hsla(var(--hsl-foreground-stark), var(--o-medium));
}

/* Selection Overlay */

.itemSelectionPanel {
	border: 2px solid var(--c-text);
	border-radius: var(--r-large);
}
@supports selector(:has(*)) {
	.itemSelectionPanel {
		border-color: var(--c-text);
	}
	.itemSelectionPanel:has(.chkItemSelect:checked) {
		border-color: var(--c-accent);
	}
}

.itemSelectionPanel .checkboxOutline {
	top: .3rem !important;
	left: .3rem;
	border-radius: calc(var(--r-large) - .3rem) !important;
}

/* Hide all play buttons when they are un-interactable, such as during multi selection */
@supports selector(:has(*)) {
	.card-hoverable:has(.itemSelectionPanel) .cardOverlayButton-hover {
		opacity: 0;
	}
}


/* Add play icon to cards that don't have one already */
/* TODO: this may be defunct now? check for any presence of valid selectors and remove if none found */

.cardScalable:has([data-action="resume"]):not(:has(.cardOverlayButton)):hover {
	--opacity: 1;
}

.cardScalable:has([data-action="resume"]):not(:has(.cardOverlayButton))::before,
.cardScalable:has([data-action="resume"]):not(:has(.cardOverlayButton))::after {
	content: "";
	position: absolute;
	z-index: 1;
	opacity: var(--opacity, 0);
	transition: opacity var(--t-average) ease;
}
.cardScalable:has([data-action="resume"]):not(:has(.cardOverlayButton))::before {
	inset: 0;
	background: hsla(var(--hsl-darken), var(--o-darken));
}
.cardScalable:has([data-action="resume"]):not(:has(.cardOverlayButton))::after {
	content: "\e037";
	inset: 50% 50% auto auto;
	width: 5vw;
	height: 5vw;
	background: hsla(var(--hsl-foreground-stark), var(--o-medium));
	border-radius: var(--r-round);
	color: var(--c-accent);
	font: 3vw/5vw var(--f-icon);
	text-align: center;
	translate: 50% -50%;
}

/* Fancy play animation */

.paper-icon-button-light[data-action="resume"] {
	border-radius: var(--r-round);
}

.paper-icon-button-light[data-action="resume"]:hover:not(:disabled) {
	background: hsla(var(--hsl-foreground-stark), var(--o-medium));
	color: var(--c-accent);
	text-shadow: 1px 1px 5px hsla(var(--hsl-accent), var(--o-medium));
}

.paper-icon-button-light[data-action="resume"]::before {
	content: "";
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	box-shadow: inset 0 3px 0 var(--c-accent), inset 0 1px 3px var(--c-accent);
	border-radius: 100%;
	opacity: 0;
}
.paper-icon-button-light[data-action="resume"]:hover:not(:disabled)::before {
	animation:
		8s linear .6s infinite rotate-repeat,
		.6s cubic-bezier(0.25, 0.1, 0, 1) 0s backwards rotate-in;
	opacity: 1;
}
@keyframes rotate-in {
	from {
		transform: rotate(-220deg);
		opacity: 0;
	} to {
		transform: rotate(45deg);
		opacity: 1;
	}
}
@keyframes rotate-repeat {
	from {
		transform: rotate(45deg);
	} to {
		transform: rotate(405deg);
	}
}

/* CARDS - LIST STYLE */

#tvRecommendedPage .itemsContainer.vertical-list {
	max-width: 70em;
	display: table;
}
	
#tvRecommendedPage .itemsContainer.vertical-list .listItem {
	display: table-row;
}
	
#tvRecommendedPage .itemsContainer.vertical-list .listItem > * {
	display: table-cell;
	vertical-align: middle;
}

#tvRecommendedPage .itemsContainer.vertical-list .listItemImage {
}

#tvRecommendedPage .itemsContainer.vertical-list .listItemBody {
	width: auto;
}

#tvRecommendedPage .itemsContainer.vertical-list .listItemMediaInfo {
}

#tvRecommendedPage .itemsContainer.vertical-list .mediaInfoOfficialRating {
	white-space: nowrap;
}

#tvRecommendedPage .itemsContainer.vertical-list .starRatingContainer {
	width: 4em;
	margin-left: auto;
}

#tvRecommendedPage .itemsContainer.vertical-list .listViewUserDataButtons {
	
}



/* Multi-Selection Dialogs */

.selectionCommandsPanel {
	background: var(--c-accent);
}

.itemSelectionCount::after {
	content: " Selected";
	cursor: text;
}



/* Hide collection year */
.card[data-path*="/data/collections/"] .cardText-secondary {
	display: none;
}

/* Hide collection count */
.card[data-path*="/data/collections/"] .indicator {
	display: none;
}



/* Increase collection poster size */

@media (max-width:31.25em) or (min-width:31.25em) {
	.collectionItems .portraitCard {
		width: 50%;
	}
}
@media (min-width:43.75em) {
	.collectionItems .portraitCard {
		width: 33.333333333333336%;
	}
}
@media (min-width:50em) {
	.collectionItems .portraitCard {
		width: 25%;
	}
}
@media (min-width:75em) {
	.collectionItems .portraitCard {
		width: 20%;
	}
}
@media (min-width:87.5em) {
	.collectionItems .portraitCard {
		width: 16.666666666666668%;
	}
}
@media (min-width:100em) {
	.collectionItems .portraitCard {
		width: 14.285714285714286%;
	}
}
@media (min-width:120em) {
	.portraitCard {
		width: 12.5%;
	}
}
@media (min-width:131.25em) {
	.collectionItems .portraitCard {
		width: 11.11111111111111%;
	}
}



/* Letter Picker Improvements */

.alphaPickerButton {
	border-radius: 50%;
	transition: background 0.1s ease-out;
}
.alphaPickerButton:hover,
.alphaPickerButton-selected {
	background: rgba(127, 127, 127, 0.25);
}



/* [id$="Collapsible"] .listItem {
	position: relative;
	float: left;
	background: #333333;
	background: #202020;
	padding: 0;
	border-radius: 10px;
	margin: 0 0 .6em .6em;
}
[id$="Collapsible"] .listItemIcon {
	display: none;
}
[id$="Collapsible"] .listItemBody {
	padding: .4em .6em;
}
[id$="Collapsible"] .listItemBody + button {
	position: absolute;
	right: 0;
	opacity: 0;
	z-index: 1;
}

[id$="Collapsible"] .listItem:hover .listItemBody + button {
	opacity: 1;
} */